version: '3'

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  app-database:
    driver: local
  app-redis:
    driver: local

services:
  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - '${APP_PORT:-80}:80'
      - '${APP_PORT_HTTPS:-433}:443'
    volumes:
      - ./:/var/www
      - ./.docker/nginx/:/etc/nginx/conf.d/
    networks:
      - app-network

  # PHP Service
  app:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    image: wolf_flower/app
    container_name: app
    restart: unless-stopped
    tty: true
    links:
      - db
      - redis
      - mailcatcher
    volumes:
      - ./:/var/www
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - app-network

  #Database Service
  db:
    image: mysql
    container_name: db
    volumes:
      - app-database:/var/lib/mysql
    ports:
      - '${EXPOSE_DB_PORT:-3306}:${DB_PORT:-3306}'
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_DATABASE=${DB_NAME:-app}
      - MYSQL_USER=${DB_USER:-homestead}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
    networks:
      - app-network
  # db:
  #   image: postgres:15.0-alpine
  #   restart: unless-stopped
  #   tty: true
  #   volumes:
  #     - app-database:/var/lib/postgresql/data
  #   ports:
  #     - '${DB_PORT:-5432}:5432'
  #   environment:
  #     POSTGRES_DB: ${DB_NAME:-app}
  #     POSTGRES_USER: ${DB_USER:-homestead}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
  #     POSTGRES_HOST_AUTH_METHOD: trust
  #   networks:
  #     - app-network

  horizon:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    image: wolf_flower/app
    container_name: horizon
    restart: unless-stopped
    tty: true
    depends_on:
      - db
      - redis
    volumes:
      - ./:/var/www
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    command: php artisan horizon
    networks:
      - app-network

  # Cron Service
  cron:
    build:
      context: ./.docker/cron
    container_name: cron
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  # Redis Service
  redis:
    image: redis:5-alpine
    container_name: redis
    command: redis-server --appendonly yes
    env_file: .env
    hostname: redis
    ports:
      - '${EXPOSE_REDIS_PORT:-6379}:${REDIS_PORT:-6379}'
    volumes:
      - app-redis:/data
    networks:
      - app-network

  # MailCatcher Service
  mailcatcher:
    image: jeanberu/mailcatcher:0.7.1
    container_name: mailcatcher
    ports:
      - '${MAIL_PORT:-1025}:1025'
      - '${MAIL_PORT_UI:-1080}:1080'
    networks:
      - app-network
